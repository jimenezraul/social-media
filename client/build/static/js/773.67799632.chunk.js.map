{"version":3,"file":"static/js/773.67799632.chunk.js","mappings":"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","sources":["components/Comments/index.tsx","features/posts/routes/PostById.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LIKE_COMMENT } from \"../../utils/mutations\";\nimport { useRef, useEffect } from \"react\";\n\nexport const CommentCard = ({\n  _id,\n  commentAuthor,\n  createdAtFormatted,\n  commentText,\n  likesCount,\n  likes,\n  replies,\n  isLastEl,\n}: Comments) => {\n  const commentRef = useRef<HTMLDivElement>(null);\n  const [LikeComment] = useMutation(LIKE_COMMENT);\n  const reply = replies.length <= 1 ? \"reply\" : \"replies\";\n  const repliesCount = replies.length;\n\n  useEffect(() => {\n    const hashLink = window.location.hash;\n    if (commentRef.current && hashLink === `#${_id}`) {\n      commentRef.current.scrollIntoView({ behavior: \"smooth\" });\n      // get the div element with the id of newComment\n      const newComment = document.querySelector('#new-comment');\n      \n      if (!newComment) {\n        const div = document.createElement(\"div\");\n        div.id = \"new-comment\";\n        div.classList.add(\"bg-default\", \"p-2\", \"rounded-md\", \"text-white\", \"mb-2\");\n        div.innerText = `New comment from ${commentAuthor.fullName}.`;\n        commentRef.current.prepend(div);\n      }\n    }\n  }, [_id, commentAuthor.fullName]);\n\n  const likeCommentHandler = async () => {\n    try {\n      await LikeComment({\n        variables: {\n          commentId: _id,\n        },\n      });\n    } catch (error: any) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div\n      ref={commentRef}\n      id={_id}\n      className={`${\n        isLastEl && \"mb-24 md:mb-6\"\n      } my-2 bg-slate-800 rounded-lg shadow-xl p-5 border border-slate-700 transition-all duration-300`}\n    >\n      <div className=\"flex items-start mb-4\" key={_id}>\n        <img\n          className=\"w-10 h-10 rounded-full mr-4 bg-default p-0.5\"\n          src={`${commentAuthor.profileUrl}`}\n          alt=\"\"\n          referrerPolicy=\"no-referrer\"\n        />\n        <div className=\"flex flex-col w-full\">\n          <div className=\"flex items-center\">\n            <Link className=\"inline-block text-lg font-bold mr-2\" to=\"#\">\n              {commentAuthor.fullName}\n            </Link>\n          </div>\n          <div className=\"mb-3 pb-2 text-slate-300 border-b\">\n            <span className=\"text-sm text-slate-400 italic\">\n              {createdAtFormatted}\n            </span>\n          </div>\n          <p className=\"text-slate-300\">{commentText}</p>\n          <div className=\"pt-6\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"-m-1 rounded-full border-2 border-slate-800\">\n                <i\n                  className={`${\n                    likesCount > 0 && \"bg-blue-600 rounded-full\"\n                  } fa-solid fa-thumbs-up p-2`}\n                ></i>\n              </span>\n              <span className=\"text-lg font-bold ml-3\">{likesCount}</span>\n              {/* images of the friends that like the post */}\n              {likes.length > 0 && (\n                <div className=\"ml-3 flex items-center relative w-1/2\">\n                  {likes.map((like, index) => {\n                    const position = index === 0 ? \"left-0\" : index === 1 ? \"left-4\" : \"left-8\";\n                    if (index < 3) {\n                      return (\n                        <img\n                          key={like._id}\n                          className={`absolute w-8 h-8 ${position} rounded-full border border-slate-500 bg-default`}\n                          src={`${like.profileUrl}`}\n                          alt=\"\"\n                          referrerPolicy=\"no-referrer\"\n                        />\n                      );\n                    }\n                    return null;\n                  })}\n                  {likes.length > 3 && (\n                    <span className=\"text-slate-300 ml-2\">\n                      +{likes.length - 3}\n                    </span>\n                  )}\n                </div>\n              )}\n              <p className=\"ml-auto\">\n                {repliesCount} {reply}\n              </p>\n            </div>\n            <div className=\"mt-6 mb-6 h-px bg-slate-500\"></div>\n            <div className=\"flex items-center justify-between mb-6\">\n              <button\n                onClick={likeCommentHandler}\n                className=\"py-2 px-4 font-medium hover:bg-slate-700 rounded-lg\"\n              >\n                <i className=\"fa-solid fa-thumbs-up\"></i> Like\n              </button>\n              <Link to={`/comment/${_id}`}>\n                <button className=\"py-2 px-4 font-medium hover:bg-slate-700 rounded-lg\">\n                  <i className=\"fa-sharp fa-solid fa-comment-dots\"></i> Replies\n                </button>\n              </Link>\n              <button className=\"py-2 px-4 font-medium hover:bg-slate-700 rounded-lg\">\n                <i className=\"fa-sharp fa-solid fa-share-nodes\"></i> Share\n              </button>\n            </div>\n\n            <div className=\"relative\">\n              <input\n                className=\"pt-2 pb-2 pl-3 w-full h-11 bg-slate-700 rounded-lg placeholder:text-slate-300 font-medium pr-20\"\n                type=\"text\"\n                placeholder=\"Reply to a comment\"\n              />\n              <span\n                // onClick={addCommentHandler}\n                className=\"flex absolute right-3 top-2/4 -mt-3 items-center\"\n              >\n                <svg\n                  className=\"fill-slate-50 h-6 cursor-pointer\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M2,21L23,12L2,3V10L17,12L2,14V21Z\"></path>\n                </svg>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { POST_BY_ID } from '../../../utils/queries';\nimport { Post } from '../../../components/Posts';\nimport { CommentCard } from '../../../components/Comments';\nimport { useEffect } from 'react';\nimport {\n  subscribeToNewLikeComment,\n  subscribeToNewComment,\n  subscribeToNewLike\n} from '../../../utils/subscribe';\n\nexport const PostById = () => {\n  const { id } = useParams<{ id: string }>();\n\n  const { loading, error, data, subscribeToMore } = useQuery(POST_BY_ID, {\n    variables: { postId: id },\n  });\n\n  useEffect(() => {\n    if (subscribeToMore) {\n      subscribeToNewLikeComment(subscribeToMore);\n      subscribeToNewComment(subscribeToMore);\n      subscribeToNewLike(subscribeToMore);\n    }\n  }, [subscribeToMore]);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error...</div>;\n\n  return (\n    <div className='flex flex-1 text-white'>\n      <div className='container mx-auto'>\n        <div className='flex flex-wrap justify-center h-full max-h-full'>\n          <div className='flex flex-col  w-full md:w-7/12 xl:w-5/12 px-3 h-full overflow-y-scroll no-scrollbar'>\n            <Post {...data.post} />\n            <h1 className='text-xl mb-2 font-bold'>Comments</h1>\n            {data?.post?.comments?.length === 0 && (\n              <div className='my-2 text-center bg-slate-800 rounded-lg shadow-xl p-5 border border-slate-700'>\n                <div className='text-gray-400'>No comments yet</div>\n              </div>\n            )}\n            {data.post.comments.map((comment: any, index: number) => {\n              const isLast = index === data.post.comments.length - 1;\n              return <CommentCard key={index} {...comment} isLastEl={isLast} />;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":["CommentCard","_id","commentAuthor","createdAtFormatted","commentText","likesCount","likes","replies","isLastEl","commentRef","useRef","useMutation","LIKE_COMMENT","LikeComment","reply","length","repliesCount","useEffect","hashLink","window","location","hash","current","scrollIntoView","behavior","document","querySelector","div","createElement","id","classList","add","innerText","fullName","prepend","likeCommentHandler","variables","commentId","console","log","message","ref","className","src","profileUrl","alt","referrerPolicy","to","map","like","index","position","onClick","type","placeholder","viewBox","d","PostById","useParams","useQuery","POST_BY_ID","postId","loading","error","data","subscribeToMore","subscribeToNewLikeComment","subscribeToNewComment","subscribeToNewLike","post","comments","comment","isLast"],"sourceRoot":""}