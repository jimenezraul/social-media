{"version":3,"file":"static/js/70.93712631.chunk.js","mappings":"0NAMaA,EAAY,SAAH,GAAiG,IAA3FC,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAYC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WAAYC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAkB,EAAlBA,mBACpF,OACE,SAAC,KAAI,CAACC,QAASD,EAAoBE,GAAE,oBAAeR,GAAM,UACxD,iBACES,UAAS,kEAA6DL,GAAU,4BAA2B,KAAI,UAE9GC,IACC,gBAAKI,UAAU,4CAEjB,gBACEC,IAAG,UAAKP,GACRQ,IAAI,SACJF,UAAU,0CACVG,eAAe,iBAEjB,gBAAIH,UAAU,OAAM,UACjBR,EAAU,IAAGC,SAKxB,E,sECiTA,EAlUgB,SAAH,GAA2C,IAAD,EAApCW,EAAE,EAAFA,GAAIP,EAAkB,EAAlBA,mBACfQ,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,UAAc,IAAG,eAAxCC,EAAO,KAAEC,EAAU,KAC1B,GAAiCC,EAAAA,EAAAA,GAASC,EAAAA,IAAlCC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACvB,GAAsBC,EAAAA,EAAAA,GAAYC,EAAAA,IAA3BC,GAAwC,YAA7B,GAClB,GAA0BF,EAAAA,EAAAA,GAAYG,EAAAA,IAA/BC,GAAiD,YAAlC,GAEtB,GAA4BZ,EAAAA,EAAAA,YAAgB,eAArCa,EAAM,KAAEC,EAAS,KACxB,GAAoCd,EAAAA,EAAAA,UAAS,IAAG,eAAzCe,EAAU,KAAEC,EAAa,KAC1BC,GAAaC,EAAAA,EAAAA,QAAyB,OAE5CC,EAAAA,EAAAA,YAAU,WACR,IAAKtB,EAIH,OAHAiB,OAAUM,GACVlB,EAAW,SACXc,EAAc,GAGlB,GAAG,CAACnB,KAEJsB,EAAAA,EAAAA,YAAU,WACR,IAAId,EAAJ,CACA,GAAIE,EAAO,OAAOc,QAAQC,IAAIf,GAE9B,GAAIV,GAAMS,EAAV,CAAiB,IAAD,QACRiB,EAAQ,OAAJjB,QAAI,IAAJA,GAAQ,QAAJ,EAAJA,EAAMkB,UAAE,OAAU,QAAV,EAAR,EAAUC,gBAAQ,WAAd,EAAJ,EACNC,KAAI,SAACH,GAAY,IAAD,EAChB,OAAgB,QAAT,EAAAA,EAAEI,eAAO,OAAT,EAAWD,KAAI,SAACH,GAAM,OAAKA,EAAEvC,GAAG,IAAE4C,SAAS/B,GAAM0B,EAAI,IAC9D,IACCM,OAEH3B,EAAWqB,GACX,IAAMV,EAAa,OAAJP,QAAI,IAAJA,GAAQ,QAAJ,EAAJA,EAAMkB,UAAE,OAAS,QAAT,EAAR,EAAUM,eAAO,WAAb,EAAJ,EAAmBC,QAAO,SAACC,GAAM,OAAKA,EAAEhD,MAAQa,CAAE,IACjEiB,EAAUD,EAAO,GAGnB,MAfmB,CAgBrB,GAAG,CAACP,EAAMT,EAAII,EAAQgC,OAAQ5B,EAASE,KAEvCY,EAAAA,EAAAA,YAAU,WAAO,IAAD,cACW,aAMxB,OANwB,0BAAzB,yGACQP,EAAgB,CACpBsB,UAAW,CACTC,UAAqB,QAAZ,EAAElC,EAAQ,UAAE,aAAV,EAAYjB,OAExB,KAAD,uCACH,sBAGCiB,EAAQgC,OAAS,GACiD,eAAxD,QAAV,EAAAhC,EAAQ,UAAE,OAA2C,QAA3C,EAAV,EAAYwB,UAAmB,QAAV,EAAAxB,EAAQ,UAAE,aAAV,EAAYwB,SAASQ,QAAS,UAAE,WAA3C,EAAV,EAAuDG,UAC7C,QAAV,EAAAnC,EAAQ,UAAE,OAA2C,QAA3C,EAAV,EAAYwB,UAAmB,QAAV,EAAAxB,EAAQ,UAAE,aAAV,EAAYwB,SAASQ,QAAS,UAAE,WAA3C,EAAV,EAAuDI,OAAOrD,QAAY,OAAJsB,QAAI,IAAJA,GAAQ,QAAJ,EAAJA,EAAMkB,UAAE,WAAJ,EAAJ,EAAUxC,MAZpE,WACW,wBAavBsD,EAEJ,GAAG,CAACrC,EAASW,EAAiBN,IAG9B,IAAMiC,EAAsB,OAAJjC,QAAI,IAAJA,GAAQ,QAAJ,EAAJA,EAAMkB,UAAE,WAAJ,EAAJ,EAAUM,QAAQC,QAAO,SAACC,GAChD,MAAmB,KAAfjB,EACK,KAEK,UAAMiB,EAAE/C,WAAU,aAAK+C,EAAE9C,aACvBsD,cAAcZ,SAASb,EAAWyB,cACpD,IAOMC,EAAkB,yCAAG,mGACVrB,IAAXP,GAAsD,MAAZ,QAAlB,EAAAI,EAAWyB,eAAO,aAAlB,EAAoBC,OAAY,0EAGpDjC,EAAY,CAChBwB,UAAW,CACTU,YAAa/B,EAAO7B,IACpBiB,QAA2B,QAApB,EAAEgB,EAAWyB,eAAO,aAAlB,EAAoBC,SAE9B,KAAD,EACF7C,EAAS,aAAD,OAAce,EAAO7B,MAAO,gDAEpCqC,QAAQC,IAAI,EAAD,IAAM,QAEnBL,EAAWyB,QAASC,MAAQ,GAAG,yDAChC,kBAfuB,mCAuBxB,OACE,gBAAKlD,UAAU,gEAA+D,UAC5E,iBAAKA,UAAU,kDAAiD,WAC9D,gBAAKA,UAAU,wEAAuE,SACnFoB,GACC,iBAAKpB,UAAU,oBAAmB,WAChC,cACEF,QAASD,EACTG,UAAU,kIAEZ,gBACEA,UAAU,uDACVC,IAAG,UAAKmB,EAAO1B,YACfQ,IAAG,UAAKkB,EAAO5B,WAAU,YAAI4B,EAAO3B,aACpCU,eAAe,iBAEjB,kBAAMH,UAAU,sCAAqC,UAClDoB,EAAO5B,WAAU,IAAG4B,EAAO3B,gBAG5BW,IACA,oBACEN,QA5BY,WAC1BuB,OAAUM,GACVlB,EAAW,IACXc,EAAc,GAChB,EAyBgB6B,KAAK,SACLpD,UAAU,oNAAmN,WAE7N,iBAAMA,UAAU,UAAS,yBACzB,gBACEA,UAAU,UACVqD,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRC,OAAO,eACP,cAAY,OAAM,UAElB,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,kCAOZ,iBAAK5D,UAAU,oCAAmC,WAChD,cACEF,QAASD,EACTG,UAAU,kIAEZ,kBACE6D,SAAU,SAACC,GAAC,OAAKvC,EAAcuC,EAAEC,OAAOb,MAAM,EAC9CE,KAAK,OACLY,YAAY,qBACZhE,UAAU,+GAEZ,iBAAMA,UAAU,mBAAkB,UAChC,gBACEqD,MAAM,6BACNrD,UAAU,wBACVsD,KAAK,OACLC,QAAQ,YACRC,OAAO,eAAc,UAErB,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,qDAIR,gBACE5D,UAAS,WACQ,OAAf8C,QAAe,IAAfA,OAAe,EAAfA,EAAiBN,SAAU,EAAI,cAAgB,YAAW,oFACuB,SAEnE,OAAfM,QAAe,IAAfA,OAAe,EAAfA,EAAiBb,KAAI,SAACM,EAAS0B,GAC9B,IAAMtE,EAASsE,IAAUnB,EAAgBN,OAAS,EAClD,OACE,iBAEE1C,QAAS,kBA9GH,SAACyC,GACzBlB,EAAUkB,EACZ,CA4GmC2B,CAAkB3B,EAAE,EACnCvC,UAAS,WACNL,GAAU,4BAA2B,mFAC0C,WAElF,gBACEM,IAAG,UAAKsC,EAAE7C,YACVQ,IAAI,SACJF,UAAU,0CACVG,eAAe,iBAEjB,gBAAIH,UAAU,OAAM,UACjBuC,EAAE/C,WAAU,IAAG+C,EAAE9C,iBAbfwE,EAiBX,YAKR,gBAAKjE,UAAU,+CAA8C,UAC3D,eAAIA,UAAU,YAAW,SACf,OAAPQ,QAAO,IAAPA,OAAO,EAAPA,EAASyB,KAAI,SAACH,GAAY,IAAD,EACxB,OAAQ,OAADA,QAAC,IAADA,GAAW,QAAV,EAADA,EAAGE,gBAAQ,WAAV,EAAD,EAAaC,KAAI,SAACzB,EAAcyD,GAAmB,IAAD,IAUb,EAA1C,OATeA,KAAoB,QAAV,EAAAnC,EAAEE,gBAAQ,aAAV,EAAYQ,QAAS,GAG5C2B,YAAW,WACT,IAAMC,EAAKC,SAASC,eAAe,GAAD,OAAIL,IACpC,OAAFG,QAAE,IAAFA,GAAAA,EAAIG,eAAe,CAAEC,SAAU,UACjC,GAAG,KAGDhE,EAAQoC,OAAOrD,OAAY,OAAJsB,QAAI,IAAJA,GAAQ,QAAJ,EAAJA,EAAMkB,UAAE,WAAJ,EAAJ,EAAUxC,MAEjC,gBAAIa,GAAE,UAAK6D,GAAqBjE,UAAU,mBAAkB,WAC1D,gBAAKA,UAAU,uEAAsE,UACnF,iBAAMA,UAAU,QAAO,SAAEQ,EAAQiE,UAEnC,gBAAKzE,UAAU,gBAAe,UAC5B,gBACEC,IAAG,UAAS,OAAJY,QAAI,IAAJA,GAAQ,QAAJ,EAAJA,EAAMkB,UAAE,WAAJ,EAAJ,EAAUrC,YAClBQ,IAAI,SACJF,UAAU,wCACVG,eAAe,oBATI8D,IAgB3B,gBAAI7D,GAAE,UAAK6D,GAAqBjE,UAAU,qBAAoB,WAC5D,gBAAKA,UAAU,gBAAe,UAC5B,gBACEC,IAAG,UAAW,OAANmB,QAAM,IAANA,OAAM,EAANA,EAAQ1B,YAChBQ,IAAI,SACJF,UAAU,wCACVG,eAAe,mBAGnB,gBAAKH,UAAU,wEAAuE,UACpF,iBAAMA,UAAU,QAAO,SAAEQ,EAAQiE,WAVZR,EAc7B,GACF,SAIJ,iBAAKjE,UAAU,sFAAqF,WAkClG,kBACEoD,KAAK,OACLY,YAAY,UACZhE,UAAU,sFACV0E,KAAK,UACLC,IAAKnD,EACLoD,UAAQ,KAkBV,mBAAQ9E,QAASkD,EAAmB,UAClC,gBACEhD,UAAU,4HACVqD,MAAM,6BACNE,QAAQ,YACRD,KAAK,eAAc,UAEnB,iBAAMM,EAAE,yKAOtB,E,UChUaiB,EAAW,WACtB,OAA8CtE,EAAAA,EAAAA,WAAkB,GAAM,eAA/DuE,EAAe,KAAEjF,EAAkB,KAClCO,GAAO2E,EAAAA,EAAAA,MAAP3E,GACFC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,UAAiB,IAAG,eAA3C2B,EAAO,KAAE8C,EAAU,KAC1B,GAAkDtE,EAAAA,EAAAA,GAASC,EAAAA,IAAnDE,EAAI,EAAJA,KAAMD,EAAO,EAAPA,QAASE,EAAK,EAALA,MAAOmE,EAAe,EAAfA,gBACxBC,GAAOC,EAAAA,EAAAA,GAAeC,EAAAA,IAAYF,KAElCG,EAAaC,OAAOC,SAASC,SAASC,MAAM,KAAKtD,SAAS,QAEhET,EAAAA,EAAAA,YAAU,WAAO,IAAD,IACd,IAAId,EACJ,OAAIE,EAAcc,QAAQC,IAAIf,QAE9BkE,EACM,OAAJnE,QAAI,IAAJA,GAAQ,QAAJ,EAAJA,EAAMkB,UAAE,OAAU,QAAV,EAAR,EAAUC,gBAAQ,WAAd,EAAJ,EAAoBC,KAAI,SAACyD,GAAiB,IAAD,MACjCC,EAAoB,OAAND,QAAM,IAANA,GAAe,QAAT,EAANA,EAAQxD,eAAO,WAAT,EAAN,EAAiB0D,MAAK,SAAC9D,GAAO,OAAKA,EAAEvC,MAAQ2F,EAAK3F,GAAG,IACnEK,EACsD,eAApD,OAAN8F,QAAM,IAANA,GAA6C,QAAvC,EAANA,EAAQ1D,UAAe,OAAN0D,QAAM,IAANA,OAAM,EAANA,EAAQ1D,SAASQ,QAAS,UAAE,WAAvC,EAAN,EAA+CG,UACzC,OAAN+C,QAAM,IAANA,GAA6C,QAAvC,EAANA,EAAQ1D,UAAe,OAAN0D,QAAM,IAANA,OAAM,EAANA,EAAQ1D,SAASQ,QAAS,UAAE,WAAvC,EAAN,EAA+CI,OAAOrD,OAAQ2F,EAAK3F,IAErE,OAAO,kBACFoG,GAAW,IACd/F,OAAAA,GAEJ,IAEJ,GAAG,CAACiB,EAAMD,EAASE,EAAOoE,KAE1BxD,EAAAA,EAAAA,YAAU,YACHtB,GAAM8B,EAAQM,OAAS,IAAM6C,GAChChF,EAAS,aAAD,OAAc6B,EAAQ,GAAG3C,KAErC,GAAG,CAACa,EAAI8B,EAAS7B,EAAUgF,KAE3B3D,EAAAA,EAAAA,YAAU,WACJuD,IACFY,EAAAA,EAAAA,IAAsBZ,EAE1B,GAAG,CAACA,IAEJ,IAAMa,EAAuB,WAC3BjG,GAAoBiF,EACtB,EAOA,OAAIlE,GAAgB,gBAAKZ,UAAU,WAC/Bc,GAAc,gBAAKd,UAAU,QAAO,SAAEc,EAAMN,WAG9C,gBAAKR,UAAU,2BAA0B,UACvC,iBAAKA,UAAU,+BAA8B,WAC3C,gBACEA,UAAS,cACN8E,EAA2B,SAAT,OAAiB,gDACS,UAE/C,iBAAK9E,UAAU,8EAA6E,WAC1F,iBAAKA,UAAU,8FAA6F,WAC1G,eAAIA,UAAU,qBAAoB,uBAClC,cACEF,QApBY,WACxBD,GAAoBiF,GACpBzE,EAAS,gBACX,EAkBcL,UAAU,6EAGbkC,EAAQM,OAAS,GAChBN,EAAQD,KAAI,SAACyD,EAAczB,GACzB,IAAMtE,EAASsE,IAAU/B,EAAQM,OAAS,EAC1C,OACE,SAAClD,GAAS,kBAEJoG,GAAM,IACV/F,OAAQA,EACRE,mBAAoBiG,IAHf7B,EAMX,UAGN,gBACEjE,UAAS,cACN8E,EAA6B,cAAX,SAAwB,2CACH,UAE1C,gBAAK9E,UAAU,oDAAmD,SAC9DkC,EAAQM,QAAW6C,GAYnB,gBAAKrF,UAAU,qBAAoB,UACjC,SAAC,EAAO,CAACI,GAAIA,EAAIP,mBAAoBiG,OAZvC,iBAAK9F,UAAU,uDAAsD,WACnE,eAAIA,UAAU,qBAAoB,0BAClC,eAAGA,UAAU,cAAa,gDACY,KACpC,2BACE,cAAGA,UAAU,wCACP,IAAG,kDAc7B,C","sources":["components/ChatUsersList/index.tsx","components/ChatBox/index.tsx","features/messages/routes/messages.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\ninterface Props extends User {\n  setSelectedMessage: () => void;\n}\n\nexport const ChatUsers = ({ _id, given_name, family_name, profileUrl, isLast, isRead, setSelectedMessage }: Props) => {\n  return (\n    <Link onClick={setSelectedMessage} to={`/messages/${_id}`}>\n      <div\n        className={`hover:bg-slate-700 p-3 flex items-center bg-slate-800  ${!isLast && 'border-b border-slate-700'} `}\n      >\n        {isRead && (\n          <div className=\"bg-green-500 h-2 w-2 rounded-full mr-2\"></div>\n          )}\n        <img\n          src={`${profileUrl}`}\n          alt=\"avatar\"\n          className=\"bg-default p-0.5 w-10 h-10 rounded-full\"\n          referrerPolicy=\"no-referrer\"\n        />\n        <h1 className=\"ml-2\">\n          {given_name} {family_name}\n        </h1>\n      </div>\n    </Link>\n  );\n};\n","import { useState, useRef, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME } from '../../utils/queries';\nimport { SEND_MESSAGE, MARK_MESSAGE_READ } from '../../utils/mutations';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Props extends ById {\n  setSelectedMessage: () => void;\n}\n\nconst ChatBox = ({ id, setSelectedMessage }: Props) => {\n  const navigate = useNavigate();\n  const [message, setMessage] = useState<any>([]);\n  const { loading, data, error } = useQuery(GET_ME);\n  const [sendMessage] = useMutation(SEND_MESSAGE);\n  const [markMessageRead] = useMutation(MARK_MESSAGE_READ);\n\n  const [friend, setFriend] = useState<User>();\n  const [inputValue, setInputValue] = useState('');\n  const messageRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!id) {\n      setFriend(undefined);\n      setMessage([]);\n      setInputValue('');\n      return;\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (loading) return;\n    if (error) return console.log(error);\n\n    if (id && data) {\n      const m = data?.me?.messages\n        ?.map((m: any) => {\n          return m.members?.map((m: any) => m._id).includes(id) ? m : null;\n        })\n        .flat();\n\n      setMessage(m);\n      const friend = data?.me?.friends?.filter((f: any) => f._id === id);\n      setFriend(friend[0]);\n\n      return;\n    }\n  }, [data, id, message.length, loading, error]);\n\n  useEffect(() => {\n    async function markAsRead() {\n      await markMessageRead({\n        variables: {\n          messageId: message[0]?._id,\n        },\n      });\n    }\n\n    if (\n      message.length > 0 &&\n      message[0]?.messages[message[0]?.messages.length - 1]?.status === 'delivered' &&\n      message[0]?.messages[message[0]?.messages.length - 1]?.sender._id !== data?.me?._id\n    ) {\n      markAsRead();\n    }\n  }, [message, markMessageRead, data]);\n\n  // filtered friend\n  const filteredFriends = data?.me?.friends.filter((f: User) => {\n    if (inputValue === '') {\n      return null;\n    }\n    const fullName = `${f.given_name}  ${f.family_name}`;\n    return fullName.toLowerCase().includes(inputValue.toLowerCase());\n  });\n\n  //\n  const handleFriendClick = (f: User) => {\n    setFriend(f);\n  };\n\n  const sendMessageHandler = async () => {\n    if (friend === undefined || messageRef.current?.value === '') return;\n\n    try {\n      await sendMessage({\n        variables: {\n          recipientId: friend._id,\n          message: messageRef.current?.value,\n        },\n      });\n      navigate(`/messages/${friend._id}`);\n    } catch (err) {\n      console.log(err);\n    }\n    messageRef.current!.value = '';\n  };\n\n  const resetSelectedFriend = () => {\n    setFriend(undefined);\n    setMessage([]);\n    setInputValue('');\n  };\n\n  return (\n    <div className=\"min-w-full border border-slate-700 rounded-lg overflow-hidden\">\n      <div className=\"w-full flex flex-col max-h-full overflow-hidden\">\n        <div className=\"relative flex items-center p-2 border-b border-slate-700 bg-slate-700\">\n          {friend ? (\n            <div className=\"flex items-center\">\n              <i\n                onClick={setSelectedMessage}\n                className=\"flex justify-center items-center md:hidden text-blue-500 bg-white rounded-full h-7 w-7 mr-2 text-3xl fa-solid fa-circle-left\"\n              ></i>\n              <img\n                className=\"object-cover w-10 h-10 rounded-full bg-default p-0.5\"\n                src={`${friend.profileUrl}`}\n                alt={`${friend.given_name} ${friend.family_name}`}\n                referrerPolicy=\"no-referrer\"\n              />\n              <span className=\"block ml-2 font-bold text-slate-300\">\n                {friend.given_name} {friend.family_name}\n              </span>\n\n              {!id && (\n                <button\n                  onClick={resetSelectedFriend}\n                  type=\"button\"\n                  className=\"absolute right-3 bg-slate-700 rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-slate-300 hover:bg-slate-600 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n                >\n                  <span className=\"sr-only\">Close menu</span>\n                  <svg\n                    className=\"h-4 w-4\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                    aria-hidden=\"true\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M6 18L18 6M6 6l12 12\"\n                    />\n                  </svg>\n                </button>\n              )}\n            </div>\n          ) : (\n            <div className=\"relative flex items-center w-full\">\n              <i\n                onClick={setSelectedMessage}\n                className=\"flex justify-center items-center md:hidden text-blue-500 bg-white rounded-full h-7 w-7 mr-2 text-3xl fa-solid fa-circle-left\"\n              ></i>\n              <input\n                onChange={(e) => setInputValue(e.target.value)}\n                type=\"text\"\n                placeholder=\"Search for friends\"\n                className=\"outline-none relative w-full bg-slate-800 text-gray-300 rounded-full border border-slate-600 p-2 indent-3\"\n              />\n              <span className=\"absolute right-6\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6 text-gray-400\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                  />\n                </svg>\n              </span>\n              <div\n                className={`${\n                  filteredFriends?.length >= 1 ? 'opacity-100' : 'opacity-0'\n                } absolute z-50 p-2 top-12 w-full bg-slate-700 rounded-lg border border-slate-600`}\n              >\n                {filteredFriends?.map((f: User, index: number) => {\n                  const isLast = index === filteredFriends.length - 1;\n                  return (\n                    <div\n                      key={index}\n                      onClick={() => handleFriendClick(f)}\n                      className={`${\n                        !isLast && 'border-b border-slate-800'\n                      } hover:bg-slate-800 px-3 py-2 hover:rounded-lg flex items-center cursor-pointer`}\n                    >\n                      <img\n                        src={`${f.profileUrl}`}\n                        alt=\"avatar\"\n                        className=\"bg-default p-0.5 w-10 h-10 rounded-full\"\n                        referrerPolicy=\"no-referrer\"\n                      />\n                      <h1 className=\"ml-2\">\n                        {f.given_name} {f.family_name}\n                      </h1>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"relative w-full p-6 overflow-y-auto max-h-65\">\n          <ul className=\"space-y-2\">\n            {message?.map((m: any) => {\n              return m?.messages?.map((message: any, index: number) => {\n                const isLast = index === m.messages?.length - 1;\n\n                if (isLast) {\n                  setTimeout(() => {\n                    const el = document.getElementById(`${index}`);\n                    el?.scrollIntoView({ behavior: 'smooth' });\n                  }, 100);\n                }\n\n                if (message.sender._id === data?.me?._id) {\n                  return (\n                    <li id={`${index}`} key={index} className=\"flex justify-end\">\n                      <div className=\"relative max-w-xl px-5 py-1 text-white bg-blue-500 rounded-lg shadow\">\n                        <span className=\"block\">{message.text}</span>\n                      </div>\n                      <div className=\"relative ml-2\">\n                        <img\n                          src={`${data?.me?.profileUrl}`}\n                          alt=\"avatar\"\n                          className=\"bg-default p-0.5 w-8 h-8 rounded-full\"\n                          referrerPolicy=\"no-referrer\"\n                        />\n                      </div>\n                    </li>\n                  );\n                }\n                return (\n                  <li id={`${index}`} key={index} className=\"flex justify-start\">\n                    <div className=\"relative mr-2\">\n                      <img\n                        src={`${friend?.profileUrl}`}\n                        alt=\"avatar\"\n                        className=\"bg-default p-0.5 w-8 h-8 rounded-full\"\n                        referrerPolicy=\"no-referrer\"\n                      />\n                    </div>\n                    <div className=\"relative max-w-xl px-5 py-1 text-white rounded-lg bg-green-500 shadow\">\n                      <span className=\"block\">{message.text}</span>\n                    </div>\n                  </li>\n                );\n              });\n            })}\n          </ul>\n        </div>\n\n        <div className=\"flex items-center justify-between w-full p-3 border-t border-slate-700 bg-slate-700\">\n          {/* <button>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"w-6 h-6 text-gray-500\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          </button>\n          <button>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"w-5 h-5 text-gray-500\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13\"\n              />\n            </svg>\n          </button> */}\n\n          <input\n            type=\"text\"\n            placeholder=\"Message\"\n            className=\"block w-full py-2 pl-4 mx-3 bg-slate-800 rounded-full outline-none focus:text-white\"\n            name=\"message\"\n            ref={messageRef}\n            required\n          />\n          {/* <button>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"w-5 h-5 text-gray-500\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\n              />\n            </svg>\n          </button> */}\n          <button onClick={sendMessageHandler}>\n            <svg\n              className=\"w-8 h-8 text-slate-400 origin-center transform rotate-90 hover:text-slate-300 hover:scale-110 transition-all duration-200\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n","import { useEffect, useState } from 'react';\nimport { useAppSelector } from '../../../app/hooks';\nimport { selectUser } from '../../users/userSlice';\nimport { ChatUsers } from '../../../components/ChatUsersList';\nimport { useQuery } from '@apollo/client';\nimport { GET_ME } from '../../../utils/queries';\nimport ChatBox from '../../../components/ChatBox';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { subscribeToNewMessage } from '../../../utils/subscribe';\n\nexport const Messages = () => {\n  const [selectedMessage, setSelectedMessage] = useState<boolean>(false);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [members, setMembers] = useState<User[]>([]);\n  const { data, loading, error, subscribeToMore } = useQuery(GET_ME);\n  const user = useAppSelector(selectUser).user;\n\n  const newMessage = window.location.pathname.split('/').includes('new');\n\n  useEffect(() => {\n    if (loading) return;\n    if (error) return console.log(error);\n\n    setMembers(\n      data?.me?.messages?.map((member: any) => {\n        const otherMember = member?.members?.find((m: User) => m._id !== user._id);\n        const isRead =\n          member?.messages[member?.messages.length - 1]?.status === 'delivered' &&\n          member?.messages[member?.messages.length - 1]?.sender._id !== user._id;\n\n        return {\n          ...otherMember,\n          isRead,\n        };\n      }),\n    );\n  }, [data, loading, error, user]);\n\n  useEffect(() => {\n    if (!id && members.length > 0 && !newMessage) {\n      navigate(`/messages/${members[0]._id}`);\n    }\n  }, [id, members, navigate, newMessage]);\n\n  useEffect(() => {\n    if (subscribeToMore) {\n      subscribeToNewMessage(subscribeToMore);\n    }\n  }, [subscribeToMore]);\n\n  const messageSelectHandler = () => {\n    setSelectedMessage(!selectedMessage);\n  };\n\n  const newMessageHandler = () => {\n    setSelectedMessage(!selectedMessage);\n    navigate('/messages/new');\n  };\n\n  if (loading) return <div className=\"loader\"></div>;\n  if (error) return <div className=\"error\">{error.message}</div>;\n\n  return (\n    <div className=\"container mx-auto h-full\">\n      <div className=\"flex flex-row justify-center\">\n        <div\n          className={`p-1 ${\n            !selectedMessage ? 'flex' : 'hidden'\n          } md:flex flex-col space-y-2 w-full md:w-4/12`}\n        >\n          <div className=\"text-slate-300 rounded-lg overflow-hidden border border-slate-700 shadow-lg\">\n            <div className=\"flex flex-row justify-between items-center bg-slate-700 px-5 py-3 border-b border-slate-800\">\n              <h1 className=\"text-2xl font-bold\">Messages</h1>\n              <i\n                onClick={newMessageHandler}\n                className=\"hover:text-blue-400 cursor-pointer text-2xl fa-solid fa-pen-to-square\"\n              ></i>\n            </div>\n            {members.length > 0 &&\n              members.map((member: User, index: number) => {\n                const isLast = index === members.length - 1;\n                return (\n                  <ChatUsers\n                    key={index}\n                    {...member}\n                    isLast={isLast}\n                    setSelectedMessage={messageSelectHandler}\n                  />\n                );\n              })}\n          </div>\n        </div>\n        <div\n          className={`p-1 ${\n            !selectedMessage ? 'hidden' : 'flex w-full'\n          } md:flex md:w-8/12 lg:w-6/12 text-white`}\n        >\n          <div className=\"flex flex-grow max-h-full bg-slate-800 rounded-lg\">\n            {!members.length && !newMessage ? (\n              <div className=\"w-full flex flex-col justify-center items-center p-5\">\n                <h1 className=\"text-2xl font-bold\">No Messages</h1>\n                <p className=\"text-center\">\n                  You have no messages yet. Click the{' '}\n                  <span>\n                    <i className=\"text-xl fa-solid fa-pen-to-square\"></i>\n                  </span>{' '}\n                  icon to start a new conversation.\n                </p>\n              </div>\n            ) : (\n              <div className=\"flex w-full h-full\">\n                <ChatBox id={id} setSelectedMessage={messageSelectHandler} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":["ChatUsers","_id","given_name","family_name","profileUrl","isLast","isRead","setSelectedMessage","onClick","to","className","src","alt","referrerPolicy","id","navigate","useNavigate","useState","message","setMessage","useQuery","GET_ME","loading","data","error","useMutation","SEND_MESSAGE","sendMessage","MARK_MESSAGE_READ","markMessageRead","friend","setFriend","inputValue","setInputValue","messageRef","useRef","useEffect","undefined","console","log","m","me","messages","map","members","includes","flat","friends","filter","f","length","variables","messageId","status","sender","markAsRead","filteredFriends","toLowerCase","sendMessageHandler","current","value","recipientId","type","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onChange","e","target","placeholder","index","handleFriendClick","setTimeout","el","document","getElementById","scrollIntoView","behavior","text","name","ref","required","Messages","selectedMessage","useParams","setMembers","subscribeToMore","user","useAppSelector","selectUser","newMessage","window","location","pathname","split","member","otherMember","find","subscribeToNewMessage","messageSelectHandler"],"sourceRoot":""}